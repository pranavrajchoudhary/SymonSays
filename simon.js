// Grabbing necessary elements from the page
let body = document.querySelector('body');
let lvl = document.querySelector('.lvl');
let b1 = document.querySelector('.b1');
let b2 = document.querySelector('.b2');
let b3 = document.querySelector('.b3');
let b4 = document.querySelector('.b4');

let started = false;  // Flag to check if game has started
let level = 0;        // Keeps track of current level
let highScore = 0;    // Stores the highest score

let arr = [b1, b2, b3, b4];  // Array of all game buttons
let ga = [];  // Game pattern (generated by system)
let ua = [];  // User pattern (input by player)

// Start the game when any key is pressed
body.addEventListener('keydown', function () {
    if (!started) {
        console.log("game is started");
        started = true;
        levelUp();
    }
});

// This function handles moving to the next level
function levelUp() {
    ua = [];  // Clear user's input for the new level
    level++;
    lvl.innerText = `Level ${level}`;  // Update level display
    rndm();  // Show the next button in sequence
}

// Randomly pick and flash a button, then add it to game pattern
function rndm() {
    let n = Math.floor(Math.random() * 4);
    flash(arr[n]);
    ga.push(arr[n]);
}

// Animates a button when the game flashes it
function flash(btn) {
    btn.classList.add('flash');
    setTimeout(function () {
        btn.classList.remove('flash');
    }, 450);
}

// Animates a button when user clicks it
function userflash(btn) {
    btn.classList.add('userClk');
    setTimeout(function () {
        btn.classList.remove('userClk');
    }, 450);
}

// Triggers the game-over effect
function Go(btn) {
    btn.classList.add('gameOver');
    setTimeout(function () {
        btn.classList.remove('gameOver');
    }, 150);
}

// When a button is pressed by user
function btnPress() {
    let cbtn = this;
    console.log(cbtn);

    // Quick click animation
    cbtn.classList.add('btnn');
    setTimeout(() => {
        cbtn.classList.remove('btnn');
    }, 150);

    userflash(cbtn);
    ua.push(cbtn);  // Add to user's pattern
    chkAns(ua.length - 1);  // Check if user's input is correct
}

// Add click event listeners to all buttons
let btnToPress = document.querySelectorAll('.btn');
for (btn of btnToPress) {
    btn.addEventListener('click', btnPress);
}

// Check user's input against game pattern
function chkAns(idx) {
    if (ua[idx] === ga[idx]) {
        // If user completed the full pattern correctly
        if (ua.length === ga.length) {
            console.log(ga);
            console.log(ua);
            setTimeout(levelUp, 500);

            // Update high score
            if (level * 10 > highScore) {
                highScore += 10;
            }
            document.querySelector('h2').innerText = `High Score : ${highScore}`;
        }
    } else {
        // If user pressed the wrong button
        lvl.innerText = `Game Over ! Press any key to start`;
        started = false;
        Go(body);
        ga = [];
        ua = [];
        level = 0;
    }
}

// Reset high score from local storage
function resetHighScore() {
    localStorage.removeItem("highScore");
    highScore = 0;
    document.querySelector('h2').innerText = `High Score: ${highScore}`;
}

// Activate Night Mode: darker background, replaces toggle button
function nightmode() {
    body.classList.add('ntm');
    document.querySelector('.nbtn').remove();

    let dnbtn = document.createElement('button');
    dnbtn.innerText = 'Day Mode';
    dnbtn.classList.add('dbtn');
    dnbtn.setAttribute('onclick', 'daymode()');
    body.appendChild(dnbtn);
}

// Switch back to Day Mode and recreate Night Mode toggle
function daymode() {
    body.classList.remove('ntm');
    document.querySelector('.dbtn').remove();

    let ntbtn = document.createElement('button');
    ntbtn.innerText = 'Night Mode';
    ntbtn.classList.add('nbtn');
    ntbtn.setAttribute('onclick', 'nightmode()');
    body.appendChild(ntbtn);
}

